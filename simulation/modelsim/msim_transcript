# Reading C:/intelFPGA/18.0/modelsim_ase/tcl/vsim/pref.tcl
# do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying C:/intelFPGA/18.0/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:40:56 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:57 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:40:57 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:40:57 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:40:57 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:40:57 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3100, In1 = x, In2 = x, ALU_Result = x
#                 3100, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3100, ALUControl = 0010
#                 3100, PC = 11, PC_next = 12
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, PC = 14, PC_next = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 15, PC_next = 16
#                 4100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 4100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work".
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:29 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:46:29 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:46:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:46:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 04:46:31 on Oct 29,2020, Elapsed time: 0:05:34
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:46:31 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000010010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 1, ALU_Result = 4
#                 3100, In1 = 3, In2 = 1, ALU_Result = 2
#                 3100, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3102, Write: register[5] = 2
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3300, In1 = x, In2 = x, ALU_Result = x
#                 3300, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3300, ALUControl = 0010
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, PC = 14, PC_next = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 15, PC_next = 16
#                 4100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 4100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:48:10 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:10 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:48:11 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:48:11 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:48:11 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 04:48:12 on Oct 29,2020, Elapsed time: 0:01:41
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:48:12 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000000010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 0, ALU_Result = 3
#                 3100, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3102, Write: register[5] = 3
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3300, In1 = x, In2 = x, ALU_Result = x
#                 3300, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3300, ALUControl = 0010
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, PC = 14, PC_next = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 15, PC_next = 16
#                 4100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 4100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:22 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:49:22 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:22 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:49:22 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:23 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:49:23 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 04:49:25 on Oct 29,2020, Elapsed time: 0:01:13
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:49:25 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000010010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 1, ALU_Result = 4
#                 3100, In1 = 3, In2 = 1, ALU_Result = 2
#                 3100, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3102, Write: register[5] = 2
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3300, In1 = x, In2 = x, ALU_Result = x
#                 3300, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3300, ALUControl = 0010
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, PC = 14, PC_next = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 15, PC_next = 16
#                 4100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 4100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:51 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:49:51 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:49:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:49:52 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 04:49:54 on Oct 29,2020, Elapsed time: 0:00:29
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:49:54 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3300, In1 = x, In2 = x, ALU_Result = x
#                 3300, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3300, ALUControl = 0010
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, PC = 14, PC_next = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 15, PC_next = 16
#                 4100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 4100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work".
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:53:33 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:53:33 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 04:53:35 on Oct 29,2020, Elapsed time: 0:03:41
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:53:35 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00000000000000000000000000000000
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0101
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00000000000000000000000000000000
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = 00100000000000010000000000000111
#                 3700, In1 = 0, In2 = 1, ALU_Result = 4294967294
#                 3700, In1 = 0, In2 = 7, ALU_Result = 4294967288
#                 3700, In1 = 0, In2 = 7, ALU_Result = 7
#                 3700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3700, ALUControl = 0010
#                 3700, PC = 14, PC_next = 15
#                 3702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3702, Write: register[1] = 7
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3900, PC = 15, PC_next = 16
#                 4100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 4100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:56 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 04:54:57 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:57 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 04:54:57 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 04:54:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 04:54:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 04:55:01 on Oct 29,2020, Elapsed time: 0:01:26
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 04:55:01 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00000000000000000000000000000000
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0101
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00000000000000000000000000000000
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = 00100000000000010000000000000111
#                 3700, In1 = 0, In2 = 1, ALU_Result = 4294967294
#                 3700, In1 = 0, In2 = 7, ALU_Result = 4294967288
#                 3700, In1 = 0, In2 = 7, ALU_Result = 7
#                 3700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3700, ALUControl = 0010
#                 3700, PC = 14, PC_next = 15
#                 3702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3702, Write: register[1] = 7
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3900, PC = 15, PC_next = 16
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 16, PC_next = 17
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 17, PC_next = 18
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 18, PC_next = 19
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 19, PC_next = 20
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 20, PC_next = 21
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 21, PC_next = 22
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 22, PC_next = 23
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 23, PC_next = 24
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 24, PC_next = 25
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 25, PC_next = 26
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 26, PC_next = 27
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 27, PC_next = 28
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 28, PC_next = 29
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 29, PC_next = 30
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 30, PC_next = 31
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work".
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:02 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:02:02 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:02 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:02:02 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:02 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:02:02 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:02 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:02:02 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:04 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:02:04 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:04 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:02:04 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:04 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:02:04 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:04 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:02:04 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:02:04 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:02:04 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:02:06 on Oct 29,2020, Elapsed time: 0:07:05
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:02:06 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00000000000000000000000000000000
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0101
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00010000000000000000000000000001
#                 3500, In1 = 0, In2 = 0, ALU_Result = 0
#                 3500, ALUControl = 0110
#                 3500, PC = 13, PC_next = 14
#                 3700, instruciton = 00100000000000010000000000000111
#                 3700, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3700, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 3700, In1 = 0, In2 = 7, ALU_Result = 7
#                 3700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3702, Write: register[1] = 7
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:04:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:04:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:04:40 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:04:41 on Oct 29,2020, Elapsed time: 0:02:35
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:04:41 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000111
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 3500, In1 = 0, In2 = 7, ALU_Result = 7
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3502, Write: register[1] = 7
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:26 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:06:26 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:26 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:06:26 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:26 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:06:26 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:26 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:06:26 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:26 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:06:26 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:27 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:06:27 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:27 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:06:27 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:27 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:06:27 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:06:27 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:06:27 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:06:28 on Oct 29,2020, Elapsed time: 0:01:47
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:06:28 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000101
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 5, ALU_Result = 4294967291
#                 3500, In1 = 0, In2 = 5, ALU_Result = 5
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3502, Write: register[1] = 5
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:20 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:07:20 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:20 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:07:20 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:20 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:21 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:21 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:21 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:21 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:21 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:21 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:07:21 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:07:22 on Oct 29,2020, Elapsed time: 0:00:54
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:07:23 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000101
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 5, ALU_Result = 4294967291
#                 3500, In1 = 0, In2 = 5, ALU_Result = 5
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3502, Write: register[1] = 5
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:59 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:07:59 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:59 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:07:59 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:59 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:07:59 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:59 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:07:59 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:07:59 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:07:59 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:08:00 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:08:00 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:08:00 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:08:00 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:08:00 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:08:00 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:08:00 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:08:00 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:08:01 on Oct 29,2020, Elapsed time: 0:00:38
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:08:01 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000101
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 5, ALU_Result = 4294967291
#                 3500, In1 = 0, In2 = 5, ALU_Result = 5
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3502, Write: register[1] = 5
#                 3700, instruciton = 00100000000000010000000000001111
#                 3700, In1 = 0, In2 = 15, ALU_Result = 15
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3702, Read_Reg2 = 1, Read_Data2 = 15, registers[Read_Reg2] = 15
#                 3702, Write: register[1] = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(45)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 45
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:57 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:11:58 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:58 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:11:59 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:11:59 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:11:59 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:12:03 on Oct 29,2020, Elapsed time: 0:04:02
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:12:03 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000101
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 5, ALU_Result = 4294967291
#                 3500, In1 = 0, In2 = 5, ALU_Result = 5
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3502, Write: register[1] = 5
#                 3700, instruciton = 00100000000000010000000000001111
#                 3700, In1 = 0, In2 = 15, ALU_Result = 15
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3702, Read_Reg2 = 1, Read_Data2 = 15, registers[Read_Reg2] = 15
#                 3702, Write: register[1] = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/simulation/modelsim/rtl_work".
# vlib rtl_work
# ** Error: (vlib-35) Failed to create directory "rtl_work".
# File exists. (errno = EEXIST)
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:15 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:12:15 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:12:16 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:12:16 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:12:18 on Oct 29,2020, Elapsed time: 0:00:15
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:12:18 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000101
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 5, ALU_Result = 4294967291
#                 3500, In1 = 0, In2 = 5, ALU_Result = 5
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3502, Write: register[1] = 5
#                 3700, instruciton = 00100000000000010000000000001111
#                 3700, In1 = 0, In2 = 15, ALU_Result = 15
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3702, Read_Reg2 = 1, Read_Data2 = 15, registers[Read_Reg2] = 15
#                 3702, Write: register[1] = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:13:37 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:13:37 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:13:37 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:13:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:13:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:13:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:13:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:13:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:13:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:13:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:13:39 on Oct 29,2020, Elapsed time: 0:01:21
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:13:39 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3300, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000101
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 5, ALU_Result = 4294967291
#                 3500, In1 = 0, In2 = 5, ALU_Result = 5
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3500, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3502, Write: register[1] = 5
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3700, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:47 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:19:47 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:47 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:19:47 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:47 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:19:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:19:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:19:50 on Oct 29,2020, Elapsed time: 0:06:11
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:19:50 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1100, PC = 0, PC_next = 1
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1300, PC = 1, PC_next = 2
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1500, PC = 2, PC_next = 3
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1700, PC = 3, PC_next = 4
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1900, PC = 4, PC_next = 5
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2100, PC = 5, PC_next = 6
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2300, PC = 6, PC_next = 7
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2500, PC = 7, PC_next = 8
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2700, PC = 8, PC_next = 9
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, PC = 9, PC_next = 10
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3100, PC = 10, PC_next = 11
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00100000000000010000000000000101
#                 3300, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 5, ALU_Result = 4294967290
#                 3300, In1 = 0, In2 = 5, ALU_Result = 5
#                 3300, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3300, ALUControl = 0010
#                 3300, PC = 11, PC_next = 12
#                 3302, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3302, Write: register[1] = 5
#                 3500, instruciton = 00100000000000010000000000000111
#                 3500, In1 = 0, In2 = 7, ALU_Result = 7
#                 3500, ALUControl = 0010
#                 3500, PC = 12, PC_next = 13
#                 3502, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3502, Write: register[1] = 7
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3700, PC = 13, PC_next = 14
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, PC = 14, PC_next = 15
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4100, PC = 15, PC_next = 16
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4300, PC = 16, PC_next = 17
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4500, PC = 17, PC_next = 18
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4700, PC = 18, PC_next = 19
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4900, PC = 19, PC_next = 20
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5100, PC = 20, PC_next = 21
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5300, PC = 21, PC_next = 22
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5500, PC = 22, PC_next = 23
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5700, PC = 23, PC_next = 24
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5900, PC = 24, PC_next = 25
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6100, PC = 25, PC_next = 26
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6300, PC = 26, PC_next = 27
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6500, PC = 27, PC_next = 28
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6700, PC = 28, PC_next = 29
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6900, PC = 29, PC_next = 30
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:26:17 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:26:17 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:26:19 on Oct 29,2020, Elapsed time: 0:06:29
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:26:19 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1150, PC = 1, PC_next = 2
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1350, PC = 2, PC_next = 3
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1550, PC = 3, PC_next = 4
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1750, PC = 4, PC_next = 5
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 1950, PC = 5, PC_next = 6
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2150, PC = 6, PC_next = 7
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2350, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2550, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2750, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 2950, PC = 10, PC_next = 11
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3150, PC = 11, PC_next = 12
#                 3300, instruciton = 00100000000000010000000000000101
#                 3300, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 5, ALU_Result = 4294967290
#                 3300, In1 = 0, In2 = 5, ALU_Result = 5
#                 3300, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3300, ALUControl = 0010
#                 3302, Read_Reg2 = 1, Read_Data2 = 5, registers[Read_Reg2] = 5
#                 3302, Write: register[1] = 5
#                 3350, PC = 12, PC_next = 13
#                 3500, instruciton = 00100000000000010000000000000111
#                 3500, In1 = 0, In2 = 7, ALU_Result = 7
#                 3500, ALUControl = 0010
#                 3502, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3502, Write: register[1] = 7
#                 3550, PC = 13, PC_next = 14
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3750, PC = 14, PC_next = 15
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3950, PC = 15, PC_next = 16
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4150, PC = 16, PC_next = 17
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4350, PC = 17, PC_next = 18
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4550, PC = 18, PC_next = 19
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4750, PC = 19, PC_next = 20
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4950, PC = 20, PC_next = 21
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5150, PC = 21, PC_next = 22
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5350, PC = 22, PC_next = 23
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5550, PC = 23, PC_next = 24
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5750, PC = 24, PC_next = 25
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5950, PC = 25, PC_next = 26
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6150, PC = 26, PC_next = 27
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6350, PC = 27, PC_next = 28
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6550, PC = 28, PC_next = 29
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6750, PC = 29, PC_next = 30
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6950, PC = 30, PC_next = 31
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:27 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:27:27 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:27:28 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:27:28 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:27:30 on Oct 29,2020, Elapsed time: 0:01:11
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:27:30 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1150, PC = 1, PC_next = 2
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1350, PC = 2, PC_next = 3
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1550, PC = 3, PC_next = 4
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1750, PC = 4, PC_next = 5
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 1950, PC = 5, PC_next = 6
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2150, PC = 6, PC_next = 7
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2350, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2550, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2750, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 2950, PC = 10, PC_next = 11
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3150, PC = 11, PC_next = 12
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3350, PC = 13, PC_next = 14
#                 3500, instruciton = 00100000000000010000000000000111
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 3500, In1 = 0, In2 = 7, ALU_Result = 7
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3502, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3502, Write: register[1] = 7
#                 3550, PC = 14, PC_next = 15
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3750, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3950, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4150, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4350, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4550, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4750, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4950, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5150, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5350, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5550, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5750, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5950, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6150, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6350, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6550, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6750, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6950, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:30:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:30:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:30:11 on Oct 29,2020, Elapsed time: 0:02:41
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:30:11 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1101, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1301, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1501, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1701, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2301, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2501, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2701, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2901, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3101, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3301, PC = 13, PC_next = 14
#                 3500, instruciton = 00100000000000010000000000000111
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 3500, In1 = 0, In2 = 7, ALU_Result = 7
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3501, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3502, Write: register[1] = 7
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3701, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6301, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6501, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6701, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6901, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:44 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:33:45 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:33:45 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:33:46 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:33:47 on Oct 29,2020, Elapsed time: 0:03:36
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:33:47 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1101, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1301, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1501, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1701, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2301, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2501, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2701, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2901, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3101, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000000000000000000001
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3301, PC = 13, PC_next = 14
#                 3500, instruciton = 00100000000000010000000000000111
#                 3500, In1 = 0, In2 = 1, ALU_Result = 4294967295
#                 3500, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 3500, In1 = 0, In2 = 7, ALU_Result = 7
#                 3500, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3500, ALUControl = 0010
#                 3501, PC = 14, PC_next = 15
#                 3502, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3502, Write: register[1] = 7
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3700, In1 = x, In2 = x, ALU_Result = x
#                 3700, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3700, ALUControl = 0010
#                 3701, PC = 15, PC_next = 16
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 16, PC_next = 17
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 17, PC_next = 18
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 18, PC_next = 19
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 19, PC_next = 20
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 20, PC_next = 21
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 21, PC_next = 22
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 22, PC_next = 23
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 23, PC_next = 24
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 24, PC_next = 25
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 25, PC_next = 26
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 26, PC_next = 27
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 27, PC_next = 28
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6301, PC = 28, PC_next = 29
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6501, PC = 29, PC_next = 30
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6701, PC = 30, PC_next = 31
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6901, PC = 31, PC_next = 32
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:35:31 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:35:31 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:35:33 on Oct 29,2020, Elapsed time: 0:01:46
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:35:33 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1101, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1301, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1501, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1701, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2301, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2501, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2701, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2901, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3101, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000010000000000000000000001
#                 3300, In1 = 2, In2 = 0, ALU_Result = 2
#                 3300, In1 = 2, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 2, In2 = 0, ALU_Result = 2
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3301, PC = 12, PC_next = 13
#                 3500, instruciton = 10101100000000100000000000000010
#                 3500, In1 = 0, In2 = 2, ALU_Result = 4294967294
#                 3500, In1 = 0, In2 = 2, ALU_Result = 2
#                 3500, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3500, ALUControl = 0010
#                 3501, PC = 13, PC_next = 14
#                 3700, instruciton = 00100000000000010000000000000111
#                 3700, In1 = 0, In2 = 7, ALU_Result = 7
#                 3700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3700, ALUControl = 0010
#                 3701, PC = 14, PC_next = 15
#                 3702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3702, Write: register[1] = 7
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3901, PC = 15, PC_next = 16
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 16, PC_next = 17
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 17, PC_next = 18
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 18, PC_next = 19
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 19, PC_next = 20
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 20, PC_next = 21
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 21, PC_next = 22
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 22, PC_next = 23
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 23, PC_next = 24
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 24, PC_next = 25
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 25, PC_next = 26
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 26, PC_next = 27
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6301, PC = 27, PC_next = 28
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6501, PC = 28, PC_next = 29
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6701, PC = 29, PC_next = 30
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6901, PC = 30, PC_next = 31
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:52 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:38:53 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:38:53 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:38:55 on Oct 29,2020, Elapsed time: 0:03:22
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:38:55 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1101, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1301, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1501, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1701, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2301, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2501, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2701, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2901, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3101, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000010000001111111111111111
#                 3300, In1 = 2, In2 = 0, ALU_Result = 2
#                 3300, In1 = 2, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 2, In2 = 0, ALU_Result = 2
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3301, PC = 12, PC_next = 13
#                 3500, instruciton = 10101100000000100000000000000010
#                 3500, In1 = 0, In2 = 2, ALU_Result = 4294967294
#                 3500, In1 = 0, In2 = 2, ALU_Result = 2
#                 3500, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3500, ALUControl = 0010
#                 3501, PC = 13, PC_next = 14
#                 3700, instruciton = 00100000000000010000000000000111
#                 3700, In1 = 0, In2 = 7, ALU_Result = 7
#                 3700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 3700, ALUControl = 0010
#                 3701, PC = 14, PC_next = 15
#                 3702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 3702, Write: register[1] = 7
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3900, In1 = x, In2 = x, ALU_Result = x
#                 3900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3900, ALUControl = 0010
#                 3901, PC = 15, PC_next = 16
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 16, PC_next = 17
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 17, PC_next = 18
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 18, PC_next = 19
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 19, PC_next = 20
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 20, PC_next = 21
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 21, PC_next = 22
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 22, PC_next = 23
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 23, PC_next = 24
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 24, PC_next = 25
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 25, PC_next = 26
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 26, PC_next = 27
#                 6300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6301, PC = 27, PC_next = 28
#                 6500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6501, PC = 28, PC_next = 29
#                 6700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6701, PC = 29, PC_next = 30
#                 6900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6901, PC = 30, PC_next = 31
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 05:39:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 05:39:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 05:39:48 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:48 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 05:39:49 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:49 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 05:39:49 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:49 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 05:39:49 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:49 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 05:39:49 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:49 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 05:39:49 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 05:39:49 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 05:39:49 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 05:39:50 on Oct 29,2020, Elapsed time: 0:00:55
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 05:39:50 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  300, PC = 0, PC_next = 1
#                  500, instruciton = 00100000000000010000000000000001
#                  500, PC = 0, PC_next = 1
#                  700, instruciton = 00100000000000010000000000000001
#                  700, PC = 0, PC_next = 1
#                  900, instruciton = 00100000000000010000000000000001
#                  900, PC = 0, PC_next = 1
#                 1050, In1 = 0, In2 = 1, ALU_Result = 1
#                 1100, instruciton = 00100000000000010000000000000001
#                 1101, PC = 1, PC_next = 2
#                 1102, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1102, Write: register[1] = 1
#                 1300, instruciton = 00100000000000100000000000000010
#                 1300, In1 = 0, In2 = 2, ALU_Result = 2
#                 1300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1300, ALUControl = 0010
#                 1301, PC = 2, PC_next = 3
#                 1302, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1302, Write: register[2] = 2
#                 1500, instruciton = 00000000001000100001100000100000
#                 1500, In1 = 1, In2 = 6176, ALU_Result = 6177
#                 1500, In1 = 1, In2 = 2, ALU_Result = 3
#                 1500, ALUControl = 0010
#                 1501, PC = 3, PC_next = 4
#                 1502, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 1502, Write: register[3] = 3
#                 1700, instruciton = 00000000001000010010000000100000
#                 1700, In1 = 1, In2 = 1, ALU_Result = 2
#                 1700, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1701, PC = 4, PC_next = 5
#                 1702, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                 1702, Write: register[4] = 2
#                 1900, instruciton = 00100000000010000000000000000011
#                 1900, In1 = 0, In2 = 0, ALU_Result = 0
#                 1900, In1 = 0, In2 = 3, ALU_Result = 4294967292
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 5, PC_next = 6
#                 1902, Read_Reg2 = 8, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 1902, Write: register[8] = 3
#                 2100, instruciton = 00100000000011000000000000000011
#                 2100, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 6, PC_next = 7
#                 2102, Read_Reg2 = 12, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2102, Write: register[12] = 3
#                 2300, instruciton = 10101100000000100000000000000000
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 2300, ALUControl = 0010
#                 2301, PC = 7, PC_next = 8
#                 2500, instruciton = 10101100001000100000000000000000
#                 2500, In1 = 1, In2 = 0, ALU_Result = 1
#                 2501, PC = 8, PC_next = 9
#                 2700, instruciton = 10101100000000110000000000000011
#                 2700, In1 = 0, In2 = 3, ALU_Result = 3
#                 2700, Read_Reg2 = 3, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2700, ALUControl = 0010
#                 2701, PC = 9, PC_next = 10
#                 2900, instruciton = 10001100000001100000000000000011
#                 2900, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2901, PC = 10, PC_next = 11
#                 2902, Read_Reg2 = 6, Read_Data2 = 3, registers[Read_Reg2] = 3
#                 2902, Write: register[6] = 3
#                 3100, instruciton = 00000000011000100010100000100010
#                 3100, In1 = 3, In2 = 10274, ALU_Result = 10277
#                 3100, In1 = 3, In2 = 2, ALU_Result = 5
#                 3100, In1 = 3, In2 = 2, ALU_Result = 1
#                 3100, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3100, ALUControl = 0110
#                 3101, PC = 11, PC_next = 12
#                 3102, Read_Reg2 = 2, Read_Data2 = 2, registers[Read_Reg2] = 2
#                 3102, Write: register[5] = 1
#                 3300, instruciton = 00010000000000001111111111111111
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, In1 = 0, In2 = 0, ALU_Result = 4294967295
#                 3300, In1 = 0, In2 = 0, ALU_Result = 0
#                 3300, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 3300, ALUControl = 0110
#                 3301, PC = 11, PC_next = 12
#                 3500, instruciton = 00010000000000001111111111111111
#                 3501, PC = 11, PC_next = 12
#                 3700, instruciton = 00010000000000001111111111111111
#                 3701, PC = 11, PC_next = 12
#                 3900, instruciton = 00010000000000001111111111111111
#                 3901, PC = 11, PC_next = 12
#                 4100, instruciton = 00010000000000001111111111111111
#                 4101, PC = 11, PC_next = 12
#                 4300, instruciton = 00010000000000001111111111111111
#                 4301, PC = 11, PC_next = 12
#                 4500, instruciton = 00010000000000001111111111111111
#                 4501, PC = 11, PC_next = 12
#                 4700, instruciton = 00010000000000001111111111111111
#                 4701, PC = 11, PC_next = 12
#                 4900, instruciton = 00010000000000001111111111111111
#                 4901, PC = 11, PC_next = 12
#                 5100, instruciton = 00010000000000001111111111111111
#                 5101, PC = 11, PC_next = 12
#                 5300, instruciton = 00010000000000001111111111111111
#                 5301, PC = 11, PC_next = 12
#                 5500, instruciton = 00010000000000001111111111111111
#                 5501, PC = 11, PC_next = 12
#                 5700, instruciton = 00010000000000001111111111111111
#                 5701, PC = 11, PC_next = 12
#                 5900, instruciton = 00010000000000001111111111111111
#                 5901, PC = 11, PC_next = 12
#                 6100, instruciton = 00010000000000001111111111111111
#                 6101, PC = 11, PC_next = 12
#                 6300, instruciton = 00010000000000001111111111111111
#                 6301, PC = 11, PC_next = 12
#                 6500, instruciton = 00010000000000001111111111111111
#                 6501, PC = 11, PC_next = 12
#                 6700, instruciton = 00010000000000001111111111111111
#                 6701, PC = 11, PC_next = 12
#                 6900, instruciton = 00010000000000001111111111111111
#                 6901, PC = 11, PC_next = 12
#                 7100 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(46)
#    Time: 7100 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 46
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:06 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 08:51:06 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:06 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 08:51:06 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:06 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 08:51:06 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:06 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 08:51:06 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:07 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 08:51:07 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:07 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 08:51:07 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:07 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 08:51:07 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:07 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 08:51:07 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:07 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 08:51:07 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 08:51:08 on Oct 29,2020, Elapsed time: 3:11:18
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 08:51:08 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  150, In1 = 0, In2 = 1, ALU_Result = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  301, PC = 1, PC_next = 2
#                  302, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  302, Write: register[1] = 1
#                  500, instruciton = 00100000000000100000000000000010
#                  500, In1 = 0, In2 = 2, ALU_Result = 2
#                  500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  500, ALUControl = 0010
#                  501, PC = 2, PC_next = 3
#                  700, instruciton = 00000000001000100001100000100000
#                  700, In1 = 1, In2 = 6176, ALU_Result = 6177
#                  700, In1 = 1, In2 = 0, ALU_Result = 1
#                  700, ALUControl = 0010
#                  701, PC = 3, PC_next = 4
#                  702, Write: register[1] = 1
#                  900, instruciton = 00000000001000010010000000100000
#                  900, In1 = 1, In2 = 1, ALU_Result = 2
#                  900, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  901, PC = 4, PC_next = 5
#                 1100, instruciton = 00100000000010000000000000000011
#                 1100, In1 = 0, In2 = 0, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 3
#                 1100, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1100, ALUControl = 0010
#                 1101, PC = 5, PC_next = 6
#                 1300, instruciton = 00100000000011000000000000000011
#                 1300, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1301, PC = 6, PC_next = 7
#                 1500, instruciton = 10101100000000100000000000000000
#                 1500, In1 = 0, In2 = 0, ALU_Result = 0
#                 1500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1500, ALUControl = 0010
#                 1501, PC = 7, PC_next = 8
#                 1700, instruciton = 10101100001000100000000000000000
#                 1700, In1 = 1, In2 = 0, ALU_Result = 1
#                 1701, PC = 8, PC_next = 9
#                 1900, instruciton = 10101100000000110000000000000011
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 3, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 9, PC_next = 10
#                 2100, instruciton = 10001100000001100000000000000011
#                 2100, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 10, PC_next = 11
#                 2300, instruciton = 00000000011000100010100000100010
#                 2300, In1 = 0, In2 = 10274, ALU_Result = 10274
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2300, ALUControl = 0110
#                 2301, PC = 11, PC_next = 12
#                 2302, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2302, Write: register[1] = 0
#                 2500, instruciton = 00010000000000000000000000000001
#                 2500, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2500, ALUControl = 0110
#                 2501, PC = 13, PC_next = 14
#                 2700, instruciton = 00100000000000010000000000000111
#                 2700, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 2700, In1 = 0, In2 = 7, ALU_Result = 7
#                 2700, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2700, ALUControl = 0010
#                 2701, PC = 14, PC_next = 15
#                 2702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 2702, Write: register[1] = 7
#                 2900, instruciton = 00000110000000000000000000001101
#                 2900, In1 = 0, In2 = 13, ALU_Result = 13
#                 2900, In1 = 0, In2 = 0, ALU_Result = 0
#                 2900, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2900, ALUControl = 0010
#                 2901, PC = 15, PC_next = 16
#                 3100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3100, In1 = x, In2 = x, ALU_Result = x
#                 3100, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 3100, ALUControl = 0010
#                 3101, PC = 16, PC_next = 17
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3301, PC = 17, PC_next = 18
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3501, PC = 18, PC_next = 19
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3701, PC = 19, PC_next = 20
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 20, PC_next = 21
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 21, PC_next = 22
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 22, PC_next = 23
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 23, PC_next = 24
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 24, PC_next = 25
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 25, PC_next = 26
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 26, PC_next = 27
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 27, PC_next = 28
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 28, PC_next = 29
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 29, PC_next = 30
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 30, PC_next = 31
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 31, PC_next = 32
#                 6200 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(48)
#    Time: 6200 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 48
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:51:39 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 08:51:39 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 08:51:41 on Oct 29,2020, Elapsed time: 0:00:33
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 08:51:41 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  150, In1 = 0, In2 = 1, ALU_Result = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  301, PC = 1, PC_next = 2
#                  302, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  302, Write: register[1] = 1
#                  500, instruciton = 00100000000000100000000000000010
#                  500, In1 = 0, In2 = 2, ALU_Result = 2
#                  500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  500, ALUControl = 0010
#                  501, PC = 2, PC_next = 3
#                  700, instruciton = 00000000001000100001100000100000
#                  700, In1 = 1, In2 = 6176, ALU_Result = 6177
#                  700, In1 = 1, In2 = 0, ALU_Result = 1
#                  700, ALUControl = 0010
#                  701, PC = 3, PC_next = 4
#                  702, Write: register[1] = 1
#                  900, instruciton = 00000000001000010010000000100000
#                  900, In1 = 1, In2 = 1, ALU_Result = 2
#                  900, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  901, PC = 4, PC_next = 5
#                 1100, instruciton = 00100000000010000000000000000011
#                 1100, In1 = 0, In2 = 0, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 3
#                 1100, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1100, ALUControl = 0010
#                 1101, PC = 5, PC_next = 6
#                 1300, instruciton = 00100000000011000000000000000011
#                 1300, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1301, PC = 6, PC_next = 7
#                 1500, instruciton = 10101100000000100000000000000000
#                 1500, In1 = 0, In2 = 0, ALU_Result = 0
#                 1500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1500, ALUControl = 0010
#                 1501, PC = 7, PC_next = 8
#                 1700, instruciton = 10101100001000100000000000000000
#                 1700, In1 = 1, In2 = 0, ALU_Result = 1
#                 1701, PC = 8, PC_next = 9
#                 1900, instruciton = 10101100000000110000000000000011
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 3, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 9, PC_next = 10
#                 2100, instruciton = 10001100000001100000000000000011
#                 2100, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 10, PC_next = 11
#                 2300, instruciton = 00000000011000100010100000100010
#                 2300, In1 = 0, In2 = 10274, ALU_Result = 10274
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2300, ALUControl = 0110
#                 2301, PC = 11, PC_next = 12
#                 2302, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2302, Write: register[1] = 0
#                 2500, instruciton = 00010000000000000000000000000001
#                 2500, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2500, ALUControl = 0110
#                 2501, PC = 13, PC_next = 14
#                 2700, instruciton = 00100000000000010000000000000111
#                 2700, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 2700, In1 = 0, In2 = 7, ALU_Result = 7
#                 2700, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2700, ALUControl = 0010
#                 2701, PC = 14, PC_next = 15
#                 2702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 2702, Write: register[1] = 7
#                 2900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2900, In1 = x, In2 = x, ALU_Result = x
#                 2900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 2900, ALUControl = 0010
#                 2901, PC = 15, PC_next = 16
#                 3100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3101, PC = 16, PC_next = 17
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3301, PC = 17, PC_next = 18
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3501, PC = 18, PC_next = 19
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3701, PC = 19, PC_next = 20
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 20, PC_next = 21
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 21, PC_next = 22
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 22, PC_next = 23
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 23, PC_next = 24
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 24, PC_next = 25
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 25, PC_next = 26
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 26, PC_next = 27
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 27, PC_next = 28
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 28, PC_next = 29
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 29, PC_next = 30
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 30, PC_next = 31
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 31, PC_next = 32
#                 6200 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(48)
#    Time: 6200 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 48
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 08:53:37 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 08:53:37 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 08:53:37 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:37 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 08:53:38 on Oct 29,2020, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 08:53:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 08:53:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 08:53:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 08:53:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:53:38 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 08:53:38 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 08:53:39 on Oct 29,2020, Elapsed time: 0:01:58
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 08:53:39 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  150, In1 = 0, In2 = 1, ALU_Result = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  301, PC = 1, PC_next = 2
#                  302, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  302, Write: register[1] = 1
#                  500, instruciton = 00100000000000100000000000000010
#                  500, In1 = 0, In2 = 2, ALU_Result = 2
#                  500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  500, ALUControl = 0010
#                  501, PC = 2, PC_next = 3
#                  700, instruciton = 00000000001000100001100000100000
#                  700, In1 = 1, In2 = 6176, ALU_Result = 6177
#                  700, In1 = 1, In2 = 0, ALU_Result = 1
#                  700, ALUControl = 0010
#                  701, PC = 3, PC_next = 4
#                  702, Write: register[1] = 1
#                  900, instruciton = 00000000001000010010000000100000
#                  900, In1 = 1, In2 = 1, ALU_Result = 2
#                  900, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  901, PC = 4, PC_next = 5
#                 1100, instruciton = 00100000000010000000000000000011
#                 1100, In1 = 0, In2 = 0, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 3
#                 1100, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1100, ALUControl = 0010
#                 1101, PC = 5, PC_next = 6
#                 1300, instruciton = 00100000000011000000000000000011
#                 1300, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1301, PC = 6, PC_next = 7
#                 1500, instruciton = 10101100000000100000000000000000
#                 1500, In1 = 0, In2 = 0, ALU_Result = 0
#                 1500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1500, ALUControl = 0010
#                 1501, PC = 7, PC_next = 8
#                 1700, instruciton = 10101100001000100000000000000000
#                 1700, In1 = 1, In2 = 0, ALU_Result = 1
#                 1701, PC = 8, PC_next = 9
#                 1900, instruciton = 10101100000000110000000000000011
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 3, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 9, PC_next = 10
#                 2100, instruciton = 10001100000001100000000000000011
#                 2100, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 10, PC_next = 11
#                 2300, instruciton = 00000000011000100010100000100010
#                 2300, In1 = 0, In2 = 10274, ALU_Result = 10274
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2300, ALUControl = 0110
#                 2301, PC = 11, PC_next = 12
#                 2302, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2302, Write: register[1] = 0
#                 2500, instruciton = 00010000000000000000000000000001
#                 2500, Read_Reg2 = 0, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2500, ALUControl = 0110
#                 2501, PC = 13, PC_next = 14
#                 2700, instruciton = 00100000000000010000000000000111
#                 2700, In1 = 0, In2 = 7, ALU_Result = 4294967289
#                 2700, In1 = 0, In2 = 7, ALU_Result = 7
#                 2700, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2700, ALUControl = 0010
#                 2701, PC = 14, PC_next = 15
#                 2702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 2702, Write: register[1] = 7
#                 2900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2900, In1 = x, In2 = x, ALU_Result = x
#                 2900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 2900, ALUControl = 0010
#                 2901, PC = 15, PC_next = 16
#                 3100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3101, PC = 16, PC_next = 17
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3301, PC = 17, PC_next = 18
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3501, PC = 18, PC_next = 19
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3701, PC = 19, PC_next = 20
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 20, PC_next = 21
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 21, PC_next = 22
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 22, PC_next = 23
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 23, PC_next = 24
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 24, PC_next = 25
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 25, PC_next = 26
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 26, PC_next = 27
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 27, PC_next = 28
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 28, PC_next = 29
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 29, PC_next = 30
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 30, PC_next = 31
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 31, PC_next = 32
#                 6200 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(48)
#    Time: 6200 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 48
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:54:30 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 08:54:30 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 08:54:32 on Oct 29,2020, Elapsed time: 0:00:53
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 08:54:32 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  150, In1 = 0, In2 = 1, ALU_Result = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  301, PC = 1, PC_next = 2
#                  302, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  302, Write: register[1] = 1
#                  500, instruciton = 00100000000000100000000000000010
#                  500, In1 = 0, In2 = 2, ALU_Result = 2
#                  500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  500, ALUControl = 0010
#                  501, PC = 2, PC_next = 3
#                  700, instruciton = 00000000001000100001100000100000
#                  700, In1 = 1, In2 = 6176, ALU_Result = 6177
#                  700, In1 = 1, In2 = 0, ALU_Result = 1
#                  700, ALUControl = 0010
#                  701, PC = 3, PC_next = 4
#                  702, Write: register[1] = 1
#                  900, instruciton = 00000000001000010010000000100000
#                  900, In1 = 1, In2 = 1, ALU_Result = 2
#                  900, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  901, PC = 4, PC_next = 5
#                 1100, instruciton = 00100000000010000000000000000011
#                 1100, In1 = 0, In2 = 0, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 0
#                 1100, In1 = 0, In2 = 3, ALU_Result = 3
#                 1100, Read_Reg2 = 8, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1100, ALUControl = 0010
#                 1101, PC = 5, PC_next = 6
#                 1300, instruciton = 00100000000011000000000000000011
#                 1300, Read_Reg2 = 12, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1301, PC = 6, PC_next = 7
#                 1500, instruciton = 10101100000000100000000000000000
#                 1500, In1 = 0, In2 = 0, ALU_Result = 0
#                 1500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1500, ALUControl = 0010
#                 1501, PC = 7, PC_next = 8
#                 1700, instruciton = 10101100001000100000000000000000
#                 1700, In1 = 1, In2 = 0, ALU_Result = 1
#                 1701, PC = 8, PC_next = 9
#                 1900, instruciton = 10101100000000110000000000000011
#                 1900, In1 = 0, In2 = 3, ALU_Result = 3
#                 1900, Read_Reg2 = 3, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 1900, ALUControl = 0010
#                 1901, PC = 9, PC_next = 10
#                 2100, instruciton = 10001100000001100000000000000011
#                 2100, Read_Reg2 = 6, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2101, PC = 10, PC_next = 11
#                 2300, instruciton = 00000000011000100010100000100010
#                 2300, In1 = 0, In2 = 10274, ALU_Result = 10274
#                 2300, In1 = 0, In2 = 0, ALU_Result = 0
#                 2300, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2300, ALUControl = 0110
#                 2301, PC = 11, PC_next = 12
#                 2302, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2302, Write: register[1] = 0
#                 2500, instruciton = 10101100000000100000000000000010
#                 2500, In1 = 0, In2 = 2, ALU_Result = 0
#                 2500, In1 = 0, In2 = 2, ALU_Result = 2
#                 2500, ALUControl = 0010
#                 2501, PC = 12, PC_next = 13
#                 2700, instruciton = 00100000000000010000000000000111
#                 2700, In1 = 0, In2 = 7, ALU_Result = 7
#                 2700, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                 2700, ALUControl = 0010
#                 2701, PC = 13, PC_next = 14
#                 2702, Read_Reg2 = 1, Read_Data2 = 7, registers[Read_Reg2] = 7
#                 2702, Write: register[1] = 7
#                 2900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2900, In1 = x, In2 = x, ALU_Result = x
#                 2900, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 2900, ALUControl = 0010
#                 2901, PC = 14, PC_next = 15
#                 3100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3101, PC = 15, PC_next = 16
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3301, PC = 16, PC_next = 17
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3501, PC = 17, PC_next = 18
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3701, PC = 18, PC_next = 19
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 19, PC_next = 20
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 20, PC_next = 21
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 21, PC_next = 22
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 22, PC_next = 23
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 23, PC_next = 24
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 24, PC_next = 25
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 25, PC_next = 26
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 26, PC_next = 27
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 27, PC_next = 28
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 28, PC_next = 29
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 29, PC_next = 30
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 30, PC_next = 31
#                 6200 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(48)
#    Time: 6200 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 48
do MIPS_32bit_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:08 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/data_memory.v 
# -- Compiling module data_memory
# 
# Top level modules:
# 	data_memory
# End time: 08:55:08 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:08 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/MIPS_32bit.v 
# -- Compiling module MIPS_32bit
# 
# Top level modules:
# 	MIPS_32bit
# End time: 08:55:08 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_32bit.v 
# -- Compiling module ALU_32bit
# -- Compiling module ALU_1bit_MSB
# -- Compiling module ALU_1bit
# -- Compiling module adder_1bit
# -- Compiling module mux_4x1
# 
# Top level modules:
# 	ALU_32bit
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/ALU_Control.v 
# -- Compiling module ALU_Control
# 
# Top level modules:
# 	ALU_Control
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Control_Unit.v 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/top_level.v 
# -- Compiling module top_level
# 
# Top level modules:
# 	top_level
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/Instruction_memory.v 
# -- Compiling module Instruction_memory
# 
# Top level modules:
# 	Instruction_memory
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/register_file.v 
# -- Compiling module register_file
# 
# Top level modules:
# 	register_file
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -vlog01compat -work work +incdir+E:/UTS_Current/Academics/2020\ Spring/48451\ Embedded\ Systems\ Studio\ A/MIPS_32bit {E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:09 on Oct 29,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit" E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v 
# -- Compiling module test
# -- Compiling module test_reg_file
# -- Compiling module test_inst_mem
# -- Compiling module test_ALU
# 
# Top level modules:
# 	test
# 	test_reg_file
# 	test_inst_mem
# 	test_ALU
# End time: 08:55:09 on Oct 29,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc"  test
# End time: 08:55:11 on Oct 29,2020, Elapsed time: 0:00:39
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" test 
# Start time: 08:55:11 on Oct 29,2020
# Loading work.test
# Loading work.top_level
# Loading work.MIPS_32bit
# Loading work.Instruction_memory
# Loading work.Control_Unit
# Loading work.register_file
# Loading work.ALU_Control
# Loading work.ALU_32bit
# Loading work.ALU_1bit
# Loading work.adder_1bit
# Loading work.mux_4x1
# Loading work.ALU_1bit_MSB
# Loading work.data_memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
#                    0 <<Staring Simulation>>
#                    0, ALUControl = 0010
#                    0, PC = 0, PC_next = 1
#                    0, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                  100, instruciton = 00100000000000010000000000000001
#                  100, In1 = 0, In2 = 0, ALU_Result = 0
#                  100, Read_Reg2 = 1, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  100, ALUControl = 0010
#                  100, PC = 0, PC_next = 1
#                  150, In1 = 0, In2 = 1, ALU_Result = 1
#                  300, instruciton = 00100000000000010000000000000001
#                  301, PC = 1, PC_next = 2
#                  302, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  302, Write: register[1] = 1
#                  500, instruciton = 00100000000000100000000000000010
#                  500, In1 = 0, In2 = 2, ALU_Result = 2
#                  500, Read_Reg2 = 2, Read_Data2 = 0, registers[Read_Reg2] = 0
#                  500, ALUControl = 0010
#                  501, PC = 2, PC_next = 3
#                  700, instruciton = 00000000001000100001100000100000
#                  700, In1 = 1, In2 = 6176, ALU_Result = 6177
#                  700, In1 = 1, In2 = 0, ALU_Result = 1
#                  700, ALUControl = 0010
#                  701, PC = 3, PC_next = 4
#                  702, Write: register[1] = 1
#                  900, instruciton = 00000000001000010010000000100000
#                  900, In1 = 1, In2 = 1, ALU_Result = 2
#                  900, Read_Reg2 = 1, Read_Data2 = 1, registers[Read_Reg2] = 1
#                  901, PC = 4, PC_next = 5
#                 1100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 1100, In1 = x, In2 = x, ALU_Result = x
#                 1100, Read_Reg2 = x, Read_Data2 = x, registers[Read_Reg2] = x
#                 1100, ALUControl = 0010
#                 1101, PC = 5, PC_next = 6
#                 1300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 1301, PC = 6, PC_next = 7
#                 1500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 1501, PC = 7, PC_next = 8
#                 1700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 1701, PC = 8, PC_next = 9
#                 1900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 1901, PC = 9, PC_next = 10
#                 2100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2101, PC = 10, PC_next = 11
#                 2300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2301, PC = 11, PC_next = 12
#                 2500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2501, PC = 12, PC_next = 13
#                 2700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2701, PC = 13, PC_next = 14
#                 2900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 2901, PC = 14, PC_next = 15
#                 3100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3101, PC = 15, PC_next = 16
#                 3300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3301, PC = 16, PC_next = 17
#                 3500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3501, PC = 17, PC_next = 18
#                 3700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3701, PC = 18, PC_next = 19
#                 3900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 3901, PC = 19, PC_next = 20
#                 4100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4101, PC = 20, PC_next = 21
#                 4300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4301, PC = 21, PC_next = 22
#                 4500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4501, PC = 22, PC_next = 23
#                 4700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4701, PC = 23, PC_next = 24
#                 4900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 4901, PC = 24, PC_next = 25
#                 5100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5101, PC = 25, PC_next = 26
#                 5300, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5301, PC = 26, PC_next = 27
#                 5500, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5501, PC = 27, PC_next = 28
#                 5700, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5701, PC = 28, PC_next = 29
#                 5900, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 5901, PC = 29, PC_next = 30
#                 6100, instruciton = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#                 6101, PC = 30, PC_next = 31
#                 6200 <<Simulation Complete>>
# ** Note: $stop    : E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v(48)
#    Time: 6200 ns  Iteration: 0  Instance: /test
# Break in Module test at E:/UTS_Current/Academics/2020 Spring/48451 Embedded Systems Studio A/MIPS_32bit/test.v line 48
# End time: 09:02:43 on Oct 29,2020, Elapsed time: 0:07:32
# Errors: 0, Warnings: 0
